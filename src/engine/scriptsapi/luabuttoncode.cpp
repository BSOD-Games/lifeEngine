//////////////////////////////////////////////////////////////////////////
//
//					*** lifeEngine ***
//				Copyright (C) 2018-2020
//
// Engine repository:  	https://github.com/BSOD-Games/lifeEngine
// Authors:				Egor Pogulyaka (zombiHello)
//
//////////////////////////////////////////////////////////////////////////

extern "C"
{
	#include <lua.h>
	#include <lauxlib.h>
	#include <lualib.h>
}

#include <LuaBridge/LuaBridge.h>

#include "common/buttoncode.h"
#include "scriptsapi/luabuttoncode.h"

#define REGISTER_ENUM_VALUE( LuaVM, Value ) \
	lua_pushliteral( ( LuaVM ), #Value ); \
	lua_pushinteger( ( LuaVM ), ( Value ) ); \
	lua_settable( ( LuaVM ), -3 )

// ------------------------------------------------------------------------------------ //
// Register enum button code
// ------------------------------------------------------------------------------------ //
void le::LUAButtonCode::Register( lua_State* LuaVM )
{
	if ( !LuaVM )		return;

	// Register metatable for enum ButtonCode
	lua_newtable( LuaVM );

	// Register enum values
	REGISTER_ENUM_VALUE( LuaVM, BC_KEY_0 );
	REGISTER_ENUM_VALUE( LuaVM, BC_KEY_1 );
	REGISTER_ENUM_VALUE( LuaVM, BC_KEY_2 );
	REGISTER_ENUM_VALUE( LuaVM, BC_KEY_3 );
	REGISTER_ENUM_VALUE( LuaVM, BC_KEY_4 );
	REGISTER_ENUM_VALUE( LuaVM, BC_KEY_5 );
	REGISTER_ENUM_VALUE( LuaVM, BC_KEY_6 );
	REGISTER_ENUM_VALUE( LuaVM, BC_KEY_7 );
	REGISTER_ENUM_VALUE( LuaVM, BC_KEY_8 );
	REGISTER_ENUM_VALUE( LuaVM, BC_KEY_9 );
	REGISTER_ENUM_VALUE( LuaVM, BC_KEY_A );
	REGISTER_ENUM_VALUE( LuaVM, BC_KEY_B );
	REGISTER_ENUM_VALUE( LuaVM, BC_KEY_C );
	REGISTER_ENUM_VALUE( LuaVM, BC_KEY_D );
	REGISTER_ENUM_VALUE( LuaVM, BC_KEY_E );
	REGISTER_ENUM_VALUE( LuaVM, BC_KEY_F );
	REGISTER_ENUM_VALUE( LuaVM, BC_KEY_G );
	REGISTER_ENUM_VALUE( LuaVM, BC_KEY_H );
	REGISTER_ENUM_VALUE( LuaVM, BC_KEY_I );
	REGISTER_ENUM_VALUE( LuaVM, BC_KEY_J );
	REGISTER_ENUM_VALUE( LuaVM, BC_KEY_K );
	REGISTER_ENUM_VALUE( LuaVM, BC_KEY_L );
	REGISTER_ENUM_VALUE( LuaVM, BC_KEY_M );
	REGISTER_ENUM_VALUE( LuaVM, BC_KEY_N );
	REGISTER_ENUM_VALUE( LuaVM, BC_KEY_O );
	REGISTER_ENUM_VALUE( LuaVM, BC_KEY_P );
	REGISTER_ENUM_VALUE( LuaVM, BC_KEY_Q );
	REGISTER_ENUM_VALUE( LuaVM, BC_KEY_R );
	REGISTER_ENUM_VALUE( LuaVM, BC_KEY_S );
	REGISTER_ENUM_VALUE( LuaVM, BC_KEY_T );
	REGISTER_ENUM_VALUE( LuaVM, BC_KEY_U );
	REGISTER_ENUM_VALUE( LuaVM, BC_KEY_V );
	REGISTER_ENUM_VALUE( LuaVM, BC_KEY_W );
	REGISTER_ENUM_VALUE( LuaVM, BC_KEY_X );
	REGISTER_ENUM_VALUE( LuaVM, BC_KEY_Y );
	REGISTER_ENUM_VALUE( LuaVM, BC_KEY_Z );
	REGISTER_ENUM_VALUE( LuaVM, BC_KEY_PAD_0 );
	REGISTER_ENUM_VALUE( LuaVM, BC_KEY_PAD_1 );
	REGISTER_ENUM_VALUE( LuaVM, BC_KEY_PAD_2 );
	REGISTER_ENUM_VALUE( LuaVM, BC_KEY_PAD_3 );
	REGISTER_ENUM_VALUE( LuaVM, BC_KEY_PAD_4 );
	REGISTER_ENUM_VALUE( LuaVM, BC_KEY_PAD_5 );
	REGISTER_ENUM_VALUE( LuaVM, BC_KEY_PAD_6 );
	REGISTER_ENUM_VALUE( LuaVM, BC_KEY_PAD_7 );
	REGISTER_ENUM_VALUE( LuaVM, BC_KEY_PAD_8 );
	REGISTER_ENUM_VALUE( LuaVM, BC_KEY_PAD_9 );
	REGISTER_ENUM_VALUE( LuaVM, BC_KEY_PAD_DIVIDE );
	REGISTER_ENUM_VALUE( LuaVM, BC_KEY_PAD_MULTIPLY );
	REGISTER_ENUM_VALUE( LuaVM, BC_KEY_PAD_MINUS );
	REGISTER_ENUM_VALUE( LuaVM, BC_KEY_PAD_PLUS );
	REGISTER_ENUM_VALUE( LuaVM, BC_KEY_PAD_ENTER );
	REGISTER_ENUM_VALUE( LuaVM, BC_KEY_PAD_DECIMAL );
	REGISTER_ENUM_VALUE( LuaVM, BC_KEY_LBRACKET );
	REGISTER_ENUM_VALUE( LuaVM, BC_KEY_RBRACKET );
	REGISTER_ENUM_VALUE( LuaVM, BC_KEY_SEMICOLON );
	REGISTER_ENUM_VALUE( LuaVM, BC_KEY_APOSTROPHE );
	REGISTER_ENUM_VALUE( LuaVM, BC_KEY_BACKQUOTE );
	REGISTER_ENUM_VALUE( LuaVM, BC_KEY_COMMA );
	REGISTER_ENUM_VALUE( LuaVM, BC_KEY_PERIOD );
	REGISTER_ENUM_VALUE( LuaVM, BC_KEY_SLASH );
	REGISTER_ENUM_VALUE( LuaVM, BC_KEY_BACKSLASH );
	REGISTER_ENUM_VALUE( LuaVM, BC_KEY_MINUS );
	REGISTER_ENUM_VALUE( LuaVM, BC_KEY_EQUAL );
	REGISTER_ENUM_VALUE( LuaVM, BC_KEY_ENTER );
	REGISTER_ENUM_VALUE( LuaVM, BC_KEY_SPACE );
	REGISTER_ENUM_VALUE( LuaVM, BC_KEY_BACKSPACE );
	REGISTER_ENUM_VALUE( LuaVM, BC_KEY_TAB );
	REGISTER_ENUM_VALUE( LuaVM, BC_KEY_CAPSLOCK );
	REGISTER_ENUM_VALUE( LuaVM, BC_KEY_NUMLOCK );
	REGISTER_ENUM_VALUE( LuaVM, BC_KEY_ESCAPE );
	REGISTER_ENUM_VALUE( LuaVM, BC_KEY_SCROLLLOCK );
	REGISTER_ENUM_VALUE( LuaVM, BC_KEY_INSERT );
	REGISTER_ENUM_VALUE( LuaVM, BC_KEY_DELETE );
	REGISTER_ENUM_VALUE( LuaVM, BC_KEY_HOME );
	REGISTER_ENUM_VALUE( LuaVM, BC_KEY_END );
	REGISTER_ENUM_VALUE( LuaVM, BC_KEY_PAGEUP );
	REGISTER_ENUM_VALUE( LuaVM, BC_KEY_PAGEDOWN );
	REGISTER_ENUM_VALUE( LuaVM, BC_KEY_BREAK );
	REGISTER_ENUM_VALUE( LuaVM, BC_KEY_LSHIFT );
	REGISTER_ENUM_VALUE( LuaVM, BC_KEY_RSHIFT );
	REGISTER_ENUM_VALUE( LuaVM, BC_KEY_LALT );
	REGISTER_ENUM_VALUE( LuaVM, BC_KEY_RALT );
	REGISTER_ENUM_VALUE( LuaVM, BC_KEY_LCONTROL );
	REGISTER_ENUM_VALUE( LuaVM, BC_KEY_RCONTROL );
	REGISTER_ENUM_VALUE( LuaVM, BC_KEY_LWIN );
	REGISTER_ENUM_VALUE( LuaVM, BC_KEY_RWIN );
	REGISTER_ENUM_VALUE( LuaVM, BC_KEY_APP );
	REGISTER_ENUM_VALUE( LuaVM, BC_KEY_UP );
	REGISTER_ENUM_VALUE( LuaVM, BC_KEY_LEFT );
	REGISTER_ENUM_VALUE( LuaVM, BC_KEY_DOWN );
	REGISTER_ENUM_VALUE( LuaVM, BC_KEY_RIGHT );
	REGISTER_ENUM_VALUE( LuaVM, BC_KEY_F1 );
	REGISTER_ENUM_VALUE( LuaVM, BC_KEY_F2 );
	REGISTER_ENUM_VALUE( LuaVM, BC_KEY_F3 );
	REGISTER_ENUM_VALUE( LuaVM, BC_KEY_F4 );
	REGISTER_ENUM_VALUE( LuaVM, BC_KEY_F5 );
	REGISTER_ENUM_VALUE( LuaVM, BC_KEY_F6 );
	REGISTER_ENUM_VALUE( LuaVM, BC_KEY_F7 );
	REGISTER_ENUM_VALUE( LuaVM, BC_KEY_F8 );
	REGISTER_ENUM_VALUE( LuaVM, BC_KEY_F9 );
	REGISTER_ENUM_VALUE( LuaVM, BC_KEY_F10 );
	REGISTER_ENUM_VALUE( LuaVM, BC_KEY_F11 );
	REGISTER_ENUM_VALUE( LuaVM, BC_KEY_F12 );
	REGISTER_ENUM_VALUE( LuaVM, BC_MOUSE_1 );
	REGISTER_ENUM_VALUE( LuaVM, BC_MOUSE_2 );
	REGISTER_ENUM_VALUE( LuaVM, BC_MOUSE_3 );
	REGISTER_ENUM_VALUE( LuaVM, BC_MOUSE_4 );
	REGISTER_ENUM_VALUE( LuaVM, BC_MOUSE_5 );
	REGISTER_ENUM_VALUE( LuaVM, BC_MOUSE_6 );
	REGISTER_ENUM_VALUE( LuaVM, BC_MOUSE_7 );
	REGISTER_ENUM_VALUE( LuaVM, BC_MOUSE_8 );
	REGISTER_ENUM_VALUE( LuaVM, BC_MOUSE_WHEEL_UP );
	REGISTER_ENUM_VALUE( LuaVM, BC_MOUSE_WHEEL_DOWN );
	REGISTER_ENUM_VALUE( LuaVM, BC_MOUSE_LEFT );
	REGISTER_ENUM_VALUE( LuaVM, BC_MOUSE_RIGHT );
	REGISTER_ENUM_VALUE( LuaVM, BC_MOUSE_MIDDLE );

	// Set metatable to global value
	lua_setglobal( LuaVM, "ButtonCode" );
}
