//////////////////////////////////////////////////////////////////////////
//
//			*** lifeEngine (Двигатель жизни) ***
//				Copyright (C) 2018-2020
//
// Репозиторий движка:  https://github.com/BSOD-Games/lifeEngine
// Авторы:				Егор Погуляка (zombiHello)
//
//////////////////////////////////////////////////////////////////////////

#include "lmtproxy.h"

// ------------------------------------------------------------------------------------ //
// Constructor
// ------------------------------------------------------------------------------------ //
LMTProxy::LMTProxy()
{}

// ------------------------------------------------------------------------------------ //
// Copy
// ------------------------------------------------------------------------------------ //
LMTProxy::LMTProxy( const LMTProxy& Copy ) :
	name( Copy.name ),
	parameters( Copy.parameters )
{}

// ------------------------------------------------------------------------------------ //
// Destructor
// ------------------------------------------------------------------------------------ //
LMTProxy::~LMTProxy()
{
	Clear();
}

// ------------------------------------------------------------------------------------ //
// Clear
// ------------------------------------------------------------------------------------ //
void LMTProxy::Clear()
{}

// ------------------------------------------------------------------------------------ //
// Set name
// ------------------------------------------------------------------------------------ //
void LMTProxy::SetName( const std::string& Name )
{
	name = Name;
}

// ------------------------------------------------------------------------------------ //
// Add parameter
// ------------------------------------------------------------------------------------ //
void LMTProxy::AddParameter( LMTProxyParameter& Parameter )
{
	parameters.push_back( Parameter );
}

// ------------------------------------------------------------------------------------ //
// Remove parameter
// ------------------------------------------------------------------------------------ //
void LMTProxy::RemoveParameter( std::uint32_t Index )
{
	if ( Index >= parameters.size() ) return;
	parameters.erase( parameters.begin() + Index );
}

// ------------------------------------------------------------------------------------ //
// Find parameter
// ------------------------------------------------------------------------------------ //
LMTProxyParameter* LMTProxy::FindParameter( const std::string& Name )
{
	if ( parameters.empty() ) return nullptr;

	for ( std::uint32_t index = 0, count = parameters.size(); index < count; ++index )
		if ( parameters[ index ].GetName() == Name )
			return &parameters[ index ];

	return nullptr;
}

// ------------------------------------------------------------------------------------ //
// Get name
// ------------------------------------------------------------------------------------ //
const std::string& LMTProxy::GetName() const
{
	return name;
}

// ------------------------------------------------------------------------------------ //
// Get parameter
// ------------------------------------------------------------------------------------ //
LMTProxyParameter* LMTProxy::GetParameter( std::uint32_t Index ) const
{
	if ( Index >= parameters.size() ) return nullptr;
	return ( LMTProxyParameter* ) &parameters[ Index ];
}

// ------------------------------------------------------------------------------------ //
// Get parameters
// ------------------------------------------------------------------------------------ //
const std::vector<LMTProxyParameter> LMTProxy::GetParameters() const
{
	return parameters;
}
